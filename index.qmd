---
title: "Como acessar dados geoespaciais abertos do Brasil com geobr"
author: "Beatriz Milz"
subtitle: "Open Data Day - PyLadies São Paulo"
date: "2025-03-29"
date-format: "DD/MM/YYYY"
format: 
  revealjs:
    footer: "Slides feitos com [Quarto](https://quarto.org/docs/presentations/revealjs/index.html)."
#   logo: images/logo-laplan.png
    theme: styles.scss
    slide-number: c/t
    show-slide-number: all
    code-link: true
    code-copy: true
incremental: false
jupyter: python3
editor: 
  markdown: 
    wrap: 72
execute: 
  echo: true
  trust: true
  # cache: true
---

## Beatriz Milz

-   Doutora em Ciência Ambiental no IEE/USP
-   Atualmente: Estágio pós-doutoral na UFABC
-   Co-organizadora da [R-Ladies São Paulo](https://rladies-sp.org)
-   *Software peer review editor* na [rOpenSci](https://ropensci.org/)
-   [GitHub Star](https://stars.github.com/profiles/beatrizmilz/)

  <img  src="images/bea.png" style=" position: absolute;top: 0%; right: -10%; width: 40%; z-index: 0;"/>

<center>[![](images/logo-rladies.png){fig-align="center"
width="20%"}](https://rladies-sp.org/)
[![](images/ropensci.png){fig-align="center"
width="20%"}](https://ropensci.org/)
[![](images/github-stars-logo_Color.webp){fig-align="center"
width="25%"}](https://stars.github.com/profiles/beatrizmilz/)</center>


## Pacote geobr

-   O pacote **geobr** disponibiliza funções para obter diversas bases de dados **espaciais** oficiais do Brasil.

-   O pacote foi desenvolvido e é mantido pela equipe do [Instituto de Pesquisa Econômica Aplicada (IPEA)](https://www.ipea.gov.br/portal/).

-   Você pode saber mais no [repositório do pacote no GitHub](https://ipeagit.github.io/geobr/).

-   Disponível para `R` e `Python`.

<center>
![](images/logos/geobr-amarelo.png){fig-align="center"
width="15%"}
![](images/logos/geobr-preto.png){fig-align="center"
width="15%"}
</center>

## 

Fazer um disclaimer: eu programo em R há mais tempo. tem materiais que já fiz sobre isso. deixar links.


# Conceitos 

# `geobr`

## Instalação

Para o Python, o `geobr` está disponível no `pip`. 

```{python}
#| eval: false
pip install geobr
```

Instalar outras dependências que precisaremos:

```{python}
#| eval: false
pip install pandas geopandas
```

- Para usar o método `.explore()`: 

```{python}
#| eval: false
pip install folium matplotlib mapclassify
```


##

[![](images/geobr-PyPI.png){fig-align="center"}](https://pypi.org/project/geobr/)




## Importando bibliotecas

```{python}
import geobr
import pandas as pd
import geopandas as gpd
```

## Listando funções disponíveis

```{python}
geobr.list_geobr()
```

## Como consultar a delimitação do Brasil?

Informações retornadas por `geobr.list_geobr()`:
```
Function: read_country
Geographies available: Country
Years available: 1872, 1900, 1911, 1920, 1933, 1940, 1950, 1960, 1970, 1980, 1991, 2000, 2001, 2010, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020
Source: IBGE
```
Utilizando a função:

```{python}
geo_brasil = geobr.read_country(year = 2020)
```

## Explorando o objeto:

```{python}
geo_brasil.info()
```

Informações relevantes:

- Tem apenas 1 linha 
- Tem uma coluna chamada `geometry`
- Classe do objeto é `geopandas.geodataframe.GeoDataFrame`

## O que é o geopandas?


- **GeoPandas** é uma biblioteca Python que estende as funcionalidades do [Pandas](https://pandas.pydata.org/) para dados geoespaciais.
- Facilita a leitura, manipulação, análise e visualização de dados vetoriais (shapes) dentro de um único ecossistema.
- Cada linha em um **GeoDataFrame** corresponde a uma entidade geoespacial (por exemplo, um polígono de município).
- A coluna `geometry` armazena a forma geográfica em si (pontos, linhas ou polígonos).

[![](images/geopandas_logo_web.svg){fig-align="center" out-width="80%"}](https://geopandas.org/)

## Buscando a delimitação dos estados

```{python}
geo_estados = geobr.read_state(year = 2020)
geo_estados.info()
```

## 

```{python}
geo_estados.head(n=3)
```



## Visualizando

```{python}
# geo_brasil.plot()
# geo_brasil.explore()
```


## Visualizando o mapa

```{python}
# geo_estados.explore()
```
