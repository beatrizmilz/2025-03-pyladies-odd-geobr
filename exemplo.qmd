
# Conceitos importantes

## Dados Vetoriais e Dados Matriciais/Raster

![](images/vector-raster_1644589693.jpeg){fig-align="center"}

::: footer
Fonte da imagem: <https://guides.lib.uw.edu/>
:::

## Dados vetoriais

-   Representação do mundo por pontos, linhas e polígonos.

![](images/exemplo-vetores.png){fig-align="center"}

::: footer
Fonte: [Geocomputation with R](https://r.geocompx.org/spatial-class)
:::

## Com o geobr, trabalhamos com dados vetoriais!

-   **Pontos**: localização de uma escola, ponto de coleta, etc.

-   **Linhas**: ruas/estradas/rodovias, rios, etc.

-   **Polígonos**: delimitação de cidades, estados, países, etc.


# `geobr`

## Funções importantes

-   `read_country()`: Delimitação do Brasil

-   `read_state()`: Delimitação dos estados do Brasil

-   `read_state("SP")`: Delimitação de um estado específico, usando a
    sigla como argumento

-   `read_municipality()`: Delimitação de todos os municípios do Brasil.
    É uma base pesada!

-   `read_municipality(code_muni = 3550308)`: Delimitação de um
    município específico, usando o código do IBGE do município.

## Consultando todas as funções disponíveis

-   Função `list_geobr()`

```{r}
#| echo: false
geobr::list_geobr() |> 
  dplyr::select(1, 2, 4) |> 
  reactable::reactable(pagination = TRUE, 
                       defaultPageSize = 5, class = "smaller")
```

# Exemplos práticos

# Exemplo 1:

Localização das escolas que oferecem Ensino Médio no município de São
Paulo

## Ler a delimitação dos estados brasileiros

```{r}
# Carregando pacotes necessários
library(geobr)
library(sf)
library(tidyverse)
```

```{r}
# Lendo os dados da delimitação dos estados brasileiros
brasil_ufs <- read_state(showProgress = FALSE)
```

```{r}
# Classe do objeto
class(brasil_ufs)
```

## Explorando o objeto

```{r}
glimpse(brasil_ufs)
```

## Visualizando os estados brasileiros

```{r}
#| label: mapa-br
brasil_ufs |> 
  ggplot() +
  geom_sf()
```

## Filtrando o estado de São Paulo

```{r}
#| label: mapa-sp
estado_sp <- brasil_ufs |> 
  filter(abbrev_state == "SP") 

estado_sp |>
  ggplot() +
  geom_sf()
```

## E os municípios?

```{r}
# Carregando municípios
brasil_municipios <- read_municipality(showProgress = FALSE)
```

## Explorando o objeto

```{r}
glimpse(brasil_municipios)
```

## Como saber o código IBGE de um município?

-   Você pode consultar o código IBGE de um município no site do
    [IBGE](https://www.ibge.gov.br/explica/codigos-dos-municipios.php).

[![](images/codigo-muni.png){fig-align="center"
width="80%"}](https://www.ibge.gov.br/explica/codigos-dos-municipios.php)

## Filtrando o município de São Paulo

```{r}
muni_sp <- brasil_municipios |> 
  filter(code_muni == 3550308) 
```

## Visualizando o município de São Paulo

```{r}
#| label: mapa-muni-sp
muni_sp |> 
  ggplot() +
  geom_sf()
```

## E escolas?

```{r}
escolas_brasil <- read_schools(showProgress = FALSE)
```

## Explorando o objeto

```{r}
glimpse(escolas_brasil)
```

## Escolas no município de São Paulo

```{r}
escolas_saopaulo <- escolas_brasil |> 
  filter(abbrev_state == "SP",
         name_muni == "São Paulo") 
```

## Escolas por `government_level`

```{r}
escolas_saopaulo |> 
  count(government_level, sort = TRUE)
```

## Escolas que oferecem Ensino Médio

```{r}
ensino_medio_sao_paulo <- escolas_saopaulo |>
  filter(str_detect(education_level, "Ensino Médio")) |>
  group_by(government_level) |> 
  mutate(
    numero_linhas = n(),
    nome_label = paste0(government_level, " (N=", numero_linhas, ")")
  ) |> 
ungroup()
```

# Vamos visualizar?

## Visualizando as escolas

```{r}
#| label: mapa-sp-escolas
escolas_saopaulo |> 
  ggplot() +
  geom_sf()
```

## Visualizando as escolas e o município

```{r}
#| label: mapa-muni-sp-escolas
escolas_saopaulo |> 
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf()
```

## Visualizando as escolas por `government_level`

```{r}
#| label: mapa-muni-sp-escolas-level
escolas_saopaulo |> 
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf(aes(color = government_level))
```

## Visualizando as escolas por `government_level`

```{r}
#| label: mapa-muni-sp-escolas-facet
escolas_saopaulo |> 
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf(aes(color = government_level), show.legend = FALSE) +
  facet_wrap(~government_level, nrow = 1)
```

## Visualizando as escolas que oferecem Ensino Médio

```{r}
#| label: mapa-muni-sp-escolas-facet-EM
ensino_medio_sao_paulo |>
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf(aes(color = government_level, 
              alpha = 0.1), 
          show.legend = FALSE) +
  facet_wrap(~ government_level, nrow = 1)
```

## 

Localização das escolas estaduais e escolas privadas no município de São
Paulo, que oferecem Ensino Médio

```{r}
#| echo: true
#| code-fold: true
#| code-summary: 'Ver código'
#| label: mapa-muni-sp-escolas-final
library(ggspatial)
ensino_medio_sao_paulo |>
  filter(government_level %in% c("Estadual", "Privada")) |>
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf(aes(color = government_level, alpha = 0.1), show.legend = FALSE) +
  facet_wrap(~ nome_label) +
  labs(x = "Longitude",
       y = "Latitude") +
  scale_fill_viridis_d(begin = 0.2, end = 0.9) +
  theme(legend.spacing.x = unit(1.0, 'cm')) +
  theme_bw() +
  theme(
    panel.grid.major = element_line(
      color = gray(0.9),
      linetype = "dashed",
      size = 0.1
    ),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    axis.text.y = element_text(
      angle = 90,
      hjust = 0.5,
      size = 8
    ),
    axis.text.x = element_text(size = 8),
    axis.title.y = element_text(size = rel(0.8)),
    axis.title.x = element_text(size = rel(0.8)),
    legend.title = element_text(size = rel(0.8))
  )
```

# Exemplo 2:

Criando um mapa utilizando dados que não estão no `{geobr}`

## `abjData::pnud_min`

```{r}
library(abjData)
glimpse(pnud_min)
```

## Dados para o estado de São Paulo

```{r}
pnud_sp <- filter(pnud_min, uf_sigla == "SP")
```

Como elaborar um mapa com esses dados?

## Join

-   Podemos unir duas bases utilizando uma coluna em comum

![](images/left-join.gif){fig-align="center" width="50%"}

::: footer
Fonte da imagem: <https://www.garrickadenbuie.com/project/tidyexplain/>
:::

## Dados vetoriais

Importar os polígonos com a delimitação dos municípios do estado de São
Paulo:

```{r}
municipios_sp <- read_municipality("SP", showProgress = FALSE)
```

## Unir as duas bases de dados

```{r}
#| error: true
left_join(municipios_sp, pnud_sp, by = c("code_muni" =  "muni_id"))
```

## Unir as duas bases de dados

```{r}
pnud_sp_geo <- municipios_sp |> 
  mutate(code_muni = as.character(code_muni)) |> 
  left_join(pnud_sp, by = c("code_muni" =  "muni_id"))
```

```{r}
glimpse(pnud_sp_geo)
```

## Visualizando com o ggplot2

```{r}
#| label: mapa-pnud-geo
pnud_sp_geo |> 
  ggplot() +
  geom_sf(aes(fill = espvida)) +
  facet_wrap(vars(ano)) +
  theme_void() +
  scale_fill_viridis_c() +
  labs(fill = "Esperança de vida") +
  theme(legend.position = "bottom")
```



## Dica

- O pacote `{geobr}` faz o download das bases de dados. Isso significa que: 
    - Você precisa estar conectado à internet para baixar as bases de dados.
    - Caso o servidor onde os dados estão armazenados esteja fora do ar, você não conseguirá baixar as bases de dados.
    
Uma sugestão é salvar os resultados em um arquivo após baixar os dados, para evitar ter que baixar novamente.


## Pacotes de dados brasileiros desenvolvidos pelo IPEA

<center>[![](images/logos/geobr-amarelo.png){fig-align="center"
width="15%"}](https://ipeagit.github.io/geobr/)
[![](images/logos/geobr-preto.png){fig-align="center"
width="15%"}](https://ipeagit.github.io/geobr/)
[![](images/logos/flightsbr.png){fig-align="center"
width="15%"}](https://ipeagit.github.io/flightsbr)
[![](images/logos/censobr.png){fig-align="center"
width="15%"}](https://ipeagit.github.io/censobr/)</center>

# Materiais para estudar mais


## Exemplos similares

-   [Workshop: {censobr} - Explorando o Censo Demográfico em
    R](https://ipeagit.github.io/censobr_oficina_abep_2024/)

-   [Documentação: Pacote abjData](https://abjur.github.io/abjData/)

-   [Video: Join - Juntando bases de
    dados](https://youtu.be/xnUo25VRH70?si=du-DZCkkadigTcCI)

-   [Post: Criando mapas com os pacotes tidyverse e geobr, utilizando
    dados sobre coleta e tratamento de esgoto no Estado De São
    Paulo](https://beamilz.com/posts/2020-07-27-criando-mapas-com-os-pacotes-tidyverse-e-geobr/pt/)

## Referências sobre dados espaciais

-   [Capítulo 15: Dados geoespaciais - Livro Análises Ecológicas no
    R](https://analises-ecologicas.netlify.app/cap15.html)

-   [Livro Geocomputation with
    R](https://geocompr.robinlovelace.net/intro.html)

-   [A Gentle Introduction to GIS - QGIS
    Documentation](https://docs.qgis.org/3.22/en/docs/gentle_gis_introduction/)

-   [Geocomputation with R - Foundations - Geographic data in
    R](https://r.geocompx.org/spatial-class)

-   [Introdução à acessibilidade urbana - um guia prático em
    R](https://ipeagit.github.io/intro_access_book/pt/)
